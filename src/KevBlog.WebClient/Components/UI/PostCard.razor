@using KevBlog.Contract.DTOs
@inject IJSRuntime JS

@if(Post is not null)
{
    <div class="container masthead-followup px-4 px-md-3" @ref="postCardElement">
        @if (string.IsNullOrEmpty(Post.Title))
        {
            @* <img class="card-img-top" alt="Post poster" src="" /> *@
        }
        else
        {
            
        }
        <div class="card-body border-top bg-light">
            <h5 class="card-title">@Post.Title</h5>
            <p class="card-text">
                @Post.Created.ToString("mmmm dd, yyyy")
            </p>
        </div>
@*         <div class="card-footer text-end">
            <a class="btn btn-primary" href ="/">test</a>
        </div> *@
    </div> 
}
else
{
    <div class="card h-100">
        @* <img class="card-img-top" alt="Post samples" *@
    </div>
}


@code {
    private ElementReference postCardElement;

    [Parameter]
    public PostDisplayDto? Post { get; set; }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {   
        // if (firstRender)
        // {
        //     await JS.InvokeVoidAsync("VanilaTilt.init", postCardElement, new
        //     {
        //         max = 15,
        //         speed = 500,
        //     });
        // }
    }
    public void Dispose()
    {
        JS.InvokeVoidAsync("VanilaTilt.destroy", postCardElement);
    }

}
